# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  modulesPath,
  ...
}:

{
  imports = [ (modulesPath + "/installer/scan/not-detected.nix") ];

  boot.initrd.availableKernelModules = [
    "nvme"
    "xhci_pci"
    "usb_storage"
    "usbhid"
    "sd_mod"
  ];
  boot.initrd.kernelModules = [ "dm-snapshot" ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];
  boot.initrd.luks.devices.nixos.device = "/dev/disk/by-uuid/ca45b52f-3d82-4dba-96a1-f62e44c7a6cc";

  boot.kernelParams = [ "resume_offset=6344704" ];
  boot.resumeDevice = "/dev/disk/by-uuid/67372b15-575e-455e-bf77-9959cdd78a62";

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/7414-0099";
    fsType = "vfat";
    options = [
      "fmask=0022"
      "dmask=0022"
    ];
  };

  fileSystems."/home" = {
    device = "/dev/disk/by-uuid/6436f2a5-ac3d-4f5c-925a-185628ad4a98";
    fsType = "ext4";
    neededForBoot = true;
  };

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/67372b15-575e-455e-bf77-9959cdd78a62";
    fsType = "ext4";
  };

  swapDevices = [
    {
      device = "/swap";
      size = 10240;
    }
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno1.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlo1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
