name: "Flake Update"

on:
  schedule:
    - cron: '0 17 * * *'
  workflow_dispatch:

jobs:
  build-system:
    runs-on: ubuntu-latest
    steps:
    - name: "Checkout"
      uses: actions/checkout@v3

    - name: Substituters
      run: |
        sed -n '/trusted-public-keys = \[/, /];/{ /trusted-public-keys = \[/! { /];/! p } }' ./System/Common/configuration.nix | xargs > trusted-public-keys.txt
        sed -n '/substituters = \[/, /];/{ /substituters = \[/! { /];/! p } }' ./System/Common/configuration.nix | xargs >> substituters.txt

        echo "TRUSTED_PUBLIC_KEYS=$(cat trusted-public-keys.txt)" >> "$GITHUB_ENV"
        echo "SUBSTITUTERS=$(cat substituters.txt)" >> "$GITHUB_ENV"

    - name: "Install Nix"
      uses: cachix/install-nix-action@v26
      with:
        extra_nix_config: |
          trusted-public-keys = ${{ env.TRUSTED_PUBLIC_KEYS }}
          substituters = ${{ env.SUBSTITUTERS }}

    - name: "Update flake.lock and nvfetcher"
      run: |
        nix --accept-flake-config --show-trace --print-build-logs --verbose flake update 2>&1 | tee flake-update.txt
        nix run github:berberman/nvfetcher 2>&1 | tee nvfetcher-update.txt

    - name: "Write changelog"
      run: |
        echo "chore: update flake.lock & sources ($(date -I))" > changelog.txt
        echo "" >> changelog.txt
        grep -E "'\s\(|Updated input" flake-update.txt >> changelog.txt
        echo "" >> changelog.txt
        grep -E "â†’" nvfetcher-update.txt >> changelog.txt

    - name: "Build Packages"
      run: |
        nix shell nixpkgs#cachix github:Mic92/nix-fast-build --command bash -c "CACHIX_AUTH_TOKEN=${{ secrets.CACHIX_AUTH_TOKEN }} CACHIX_ACTIVATE_TOKEN=${{ secrets.CACHIX_ACTIVATE_TOKEN }} ./nix.sh ci"

    - name: "Ntfy failure notifications"
      if: failure()
      run: |
        curl -H "Click: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" -d "Flake Update Github Actions has failed!" ${{ secrets.NTFY_URL }} > /dev/null

    - name: "Configure Git"
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"

    - name: "Stage, Commit and Push"
      run: |
        git add flake.lock
        git add _sources/
        git commit -sF changelog.txt
        git push origin master
